<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>python绘图之turtle的使用</title>
      <link href="/2022/08/27/python%E7%BB%98%E5%9B%BE%E4%B9%8Bturtle%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/08/27/python%E7%BB%98%E5%9B%BE%E4%B9%8Bturtle%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id><a href="#" class="headerlink" title></a><span class="p center large">python绘图之turtle库的使用</span></h1><h1 id="-1"><a href="#-1" class="headerlink" title></a><div class="img-wrap"><div class="img-bg" style="background:#ffffff"><img class="img" src="https://tse4-mm.cn.bing.net/th/id/OIP-C.pXtNazmixOw77RsOzlbvzAHaEK?w=268&h=180&c=7&r=0&o=5&dpr=1.35&pid=1.7" style="height:300px;width:400px;"></div></div></h1><h1 id="turtle库的介绍"><a href="#turtle库的介绍" class="headerlink" title="turtle库的介绍"></a>turtle库的介绍</h1><p><strong><span class="p h4">turtle库也叫海龟库，1969年诞生，是turtle绘图体系的Python实现。turtle库是Python语言的标准库之一，是入门级的图形绘制函数库。</span></strong></p><h1 id="turtle库的使用"><a href="#turtle库的使用" class="headerlink" title="turtle库的使用"></a>turtle库的使用</h1><p><strong><span class="p h4 red">方法一：import turtle</span></strong><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="p h4">这种方法在之后每次引用turtle库里面的函数都需要在函数之前添加</span><strong><span class="p h4 red">库名.</span></strong><br>    <span class="p h4">例如下面代码片段：</span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line">turtle.setup(<span class="number">600</span>,<span class="number">300</span>,<span class="number">0</span>,<span class="number">200</span>)</span><br><span class="line">turtle.penup()</span><br></pre></td></tr></table></figure><p><strong><span class="p h4">red 方法二：使用from和import保留字共同完成</span></strong><br>    &nbsp;&nbsp;&nbsp;&nbsp; <span class="p h4 blue">格式：from turtle improt</span> <strong><span class="p h4">（表示添加turtle库中所有方法）</span></strong><br>    <span class="p h4 red">这种方法在函数调用时不用写</span><strong><span class="p h4 red">库名.</span></strong><span class="p h4 red">但是如果有其他同名函数，会造成函数的多次定义</span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> turtle <span class="keyword">import</span>*</span><br><span class="line">setup(<span class="number">600</span>,<span class="number">350</span>,<span class="number">200</span>,<span class="number">200</span>)</span><br><span class="line">penup()</span><br></pre></td></tr></table></figure><p><strong><span class="p h4 red">方法三：使用import和as保留字共同完成</span></strong><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="p h4 blue">格式：import 库名 as 库别名</span><br><span class="p h4">这种方法使用别名，可以减少调用函数时库名过于冗长而造成的工作量，也可避免造成函数的多重定义</span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle <span class="keyword">as</span> t</span><br><span class="line">t.setup(<span class="number">600</span>,<span class="number">400</span>,<span class="number">200</span>,<span class="number">200</span>)</span><br><span class="line">t.penup()</span><br></pre></td></tr></table></figure><h1 id="turtle库中相关的函数"><a href="#turtle库中相关的函数" class="headerlink" title="turtle库中相关的函数"></a>turtle库中相关的函数</h1><h2 id="窗体"><a href="#窗体" class="headerlink" title="窗体"></a>窗体</h2><h3 id="-2"><a href="#-2" class="headerlink" title></a><span class="p h4 cyan">setup()函数</span></h3><p><strong><span class="p h4">作用：设置窗体大小及位置</span></strong><br><strong><span class="p h4 green">turtle.setup(width</span></strong><br><img src="/2022/08/27/python%E7%BB%98%E5%9B%BE%E4%B9%8Bturtle%E7%9A%84%E4%BD%BF%E7%94%A8/c028a993b61a44c5a545bef7cc3a88f8-1661573677823.png" alt="在这里插入图片描述"><br><strong><span class="p h4">setup()函数不是必须的</span></strong></p><p><strong><span class="p h4">startx，starty不给定，默认在正中间</span></strong></p><h3 id="-3"><a href="#-3" class="headerlink" title></a><span class="p h4 cyan">screensize()函数</span></h3><p><strong><span class="p h4">作用：设置画布的高、宽（单位为像素）、背景颜色</span></strong><br><strong><span class="p h4 green">turtle.screensize(canvwidth，canvheight，bg)</span></strong><br><strong><span class="p h4">eg:turtle.screensize(bg=green)默认画布宽高，背景颜色设置为绿色</span></strong><br><img src="/2022/08/27/python%E7%BB%98%E5%9B%BE%E4%B9%8Bturtle%E7%9A%84%E4%BD%BF%E7%94%A8/40cb7152023d4bafba9b2727c7d8b1e8-1661573695964.png" alt="在这里插入图片描述"></p><h2 id="坐标"><a href="#坐标" class="headerlink" title="坐标"></a>坐标</h2><h3 id="-4"><a href="#-4" class="headerlink" title></a><span class="p h4 cyan">goto()函数</span></h3><p><strong><span class="p h4 green">turtle.goto(x，y):小乌龟沿着绝对坐标前进，到达坐标(x，y)处</span></strong></p><h3 id="-5"><a href="#-5" class="headerlink" title></a><span class="p h4 cyan">position()函数</span></h3><p><strong><span class="p h4">别名：pos()</span><br><span class="p h4">获取小乌龟当前坐标位置</span><br><span class="p h4 green">turtle.position()：获取小乌龟当前坐标</span></strong><br><span class="p h4">代码：</span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line">turtle.screensize(bg=<span class="string">&quot;green&quot;</span>)<span class="comment">#设置背景颜色</span></span><br><span class="line">turtle.goto(<span class="number">100</span>,<span class="number">100</span>)</span><br><span class="line"><span class="built_in">print</span>(turtle.pos())</span><br><span class="line">turtle.done()</span><br></pre></td></tr></table></figure><span class="p h4">结果终端输出：（100.00，100.00）</span><p><img src="/2022/08/27/python%E7%BB%98%E5%9B%BE%E4%B9%8Bturtle%E7%9A%84%E4%BD%BF%E7%94%A8/d2866b426fff4581861693aee629d257.png" alt="在这里插入图片描述"></p><h3 id="-6"><a href="#-6" class="headerlink" title></a><span class="p h4 cyan">home()函数</span></h3><p><strong><span class="p h4">此函数用于将海龟移动到原点，即坐标(0，0)。</span></strong><br><span class="p h4">代码：</span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line">turtle.screensize(bg=<span class="string">&quot;green&quot;</span>)<span class="comment">#设置背景颜色</span></span><br><span class="line">turtle.goto(<span class="number">100</span>,<span class="number">100</span>)</span><br><span class="line"><span class="built_in">print</span>(turtle.pos())</span><br><span class="line">turtle.goto(-<span class="number">100</span>,<span class="number">100</span>)</span><br><span class="line"><span class="built_in">print</span>(turtle.pos())</span><br><span class="line">turtle.home()</span><br><span class="line"><span class="built_in">print</span>(turtle.position())</span><br><span class="line">turtle.done()</span><br></pre></td></tr></table></figure><span class="p h4">终端输出：</span><p><img src="/2022/08/27/python%E7%BB%98%E5%9B%BE%E4%B9%8Bturtle%E7%9A%84%E4%BD%BF%E7%94%A8/5d7e3674c22b47c7b284062fc3e48886.png" alt="在这里插入图片描述"><br><img src="/2022/08/27/python%E7%BB%98%E5%9B%BE%E4%B9%8Bturtle%E7%9A%84%E4%BD%BF%E7%94%A8/c80341227407437185153256139369af.png" alt="在这里插入图片描述"></p><h2 id="运动"><a href="#运动" class="headerlink" title="运动"></a>运动</h2><h3 id="-7"><a href="#-7" class="headerlink" title></a><span class="p h4 cyan">forward()函数</span></h3><p><strong><span class="p h4">别名：fd()</span><br><span class="p h4 green">turtle.fd(d)表示向海龟正方向运行</span></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line">turtle.screensize(bg=<span class="string">&quot;green&quot;</span>)<span class="comment">#设置背景颜色</span></span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.fd(<span class="number">100</span>)</span><br><span class="line">turtle.done()</span><br></pre></td></tr></table></figure><span class="p h4">运行：</span><p><img src="/2022/08/27/python%E7%BB%98%E5%9B%BE%E4%B9%8Bturtle%E7%9A%84%E4%BD%BF%E7%94%A8/2f065990d3b5469ea90b1f4b08817255.png" alt="在这里插入图片描述"></p><h3 id="-8"><a href="#-8" class="headerlink" title></a><span class="p h4 cyan">back()函数</span></h3><p><strong><span class="p h4">别名：bk();</span><br>    <span class="p h4 green">turtle.bk(d)表示向海龟反方向运行</span></strong></p><h3 id="-9"><a href="#-9" class="headerlink" title></a><span class="p h4 cyan">circle()函数</span></h3><p><strong>—&gt; <span class="p h4">trutle.circle(r</span><br>    <span class="p h4">r ：弧形半径</span><br>    <span class="p h4">当r值为正数时，圆心在当前位置/小海龟左侧。</span><br>    <span class="p h4">当r值为负数时，圆心在当前位置/小海龟右侧。</span><br><span class="p h4">angle ：弧形角度，即弧度，360为整圆。当无该参数或参数为None时，绘制整个圆形</span><br>    <span class="p h4">当angle值为正数时，顺小海龟当前方向绘制。</span><br>    <span class="p h4">当angle值为负数时，逆小海龟当前方向绘制。</span>*</strong><br>    <span class="p h4">代码（当前位置左侧距离40，弧度360 ->整圆）：</span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line">turtle.screensize(bg=<span class="string">&quot;green&quot;</span>)<span class="comment">#设置背景颜色</span></span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.circle(<span class="number">40</span>,<span class="number">360</span>)</span><br><span class="line">turtle.done()</span><br></pre></td></tr></table></figure><span class="p h4">运行：</span><p><img src="/2022/08/27/python%E7%BB%98%E5%9B%BE%E4%B9%8Bturtle%E7%9A%84%E4%BD%BF%E7%94%A8/8da3ca4e42e7470fa1722ff13a6880d0.png" alt="在这里插入图片描述"></p><h2 id="方向"><a href="#方向" class="headerlink" title="方向"></a>方向</h2><h3 id="-10"><a href="#-10" class="headerlink" title></a><span class="p h4 cyan">seth()函数</span></h3><p><strong>—&gt; <span class="p h4 green">turtle.seth(angle)：角度坐标体系，改变当前海龟的行进方向，只改变方向，不会运行</span></strong></p><h3 id="-11"><a href="#-11" class="headerlink" title></a><span class="p h4 cyan">left()函数</span></h3><p><strong>—&gt; <span class="p h4 green">turtle.left(angle)：让当前海龟或向右改变运行方向</span></strong></p><h3 id="-12"><a href="#-12" class="headerlink" title></a><span class="p h4 cyan">right()函数</span></h3><p><strong>—&gt; <span class="p h4 green">turtle.right(angle)：让当前海龟向右改变运行方向</span></strong></p><h2 id="画笔"><a href="#画笔" class="headerlink" title="画笔"></a>画笔</h2><h3 id="-13"><a href="#-13" class="headerlink" title></a><span class="p h4 cyan">penup()函数</span></h3><p><strong><span class="p h4">别名： turtle.pu()</span><br>    <span class="p h4">作用： 抬起画笔，之后移动画笔不绘制形状</span></strong></p><h3 id="-14"><a href="#-14" class="headerlink" title></a><span class="p h4 cyan">pendown()函数</span></h3><p><strong><span class="p h4">别名： turtle.pd()，turtle.down())</span><br>    <span class="p h4">作用:落下画笔，之后移动画笔将绘制形状</span></strong></p><h3 id="-15"><a href="#-15" class="headerlink" title></a><span class="p h4 cyan">pensize()函数</span></h3><p><strong><span class="p h4 cyan">turtle.pensize(width)</span><br>    <span class="p h4">别名：turtle.width()</span><br>    <span class="p h4">作用：设置画笔宽度，当无参数输入时返回当前画笔宽度。</span><br>    <span class="p h4">参数：width:设置的画笔线条宽度，如为None或者为空，则函数返回当前画笔宽度。</span></strong><br><span class="p h4">代码（pensize的大小为20）：</span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line">turtle.screensize(bg=<span class="string">&quot;green&quot;</span>)<span class="comment">#设置背景颜色</span></span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.pensize(<span class="number">20</span>)</span><br><span class="line">turtle.goto(<span class="number">100</span>,<span class="number">100</span>)</span><br><span class="line">turtle.done()</span><br></pre></td></tr></table></figure><span class="p h4">运行：</span><p><img src="/2022/08/27/python%E7%BB%98%E5%9B%BE%E4%B9%8Bturtle%E7%9A%84%E4%BD%BF%E7%94%A8/3b65148e4dd94d43936bd7a1d74a50cb.png" alt="在这里插入图片描述"></p><span class="p h4">代码：（pensize的大小为50）</span><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line">turtle.screensize(bg=<span class="string">&quot;green&quot;</span>)<span class="comment">#设置背景颜色</span></span><br><span class="line">turtle.setup(<span class="number">600</span>,<span class="number">600</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.pensize(<span class="number">50</span>)</span><br><span class="line">turtle.goto(<span class="number">200</span>,<span class="number">200</span>)</span><br><span class="line">turtle.done()</span><br></pre></td></tr></table></figure><span class="p h4">运行：</span><p><img src="/2022/08/27/python%E7%BB%98%E5%9B%BE%E4%B9%8Bturtle%E7%9A%84%E4%BD%BF%E7%94%A8/4831f7839bbe4730ad7a7603fb2ce6b8.png" alt="在这里插入图片描述"></p><h3 id="-16"><a href="#-16" class="headerlink" title></a><span class="p h4 cyan">pencolor()函数</span></h3><p><strong>—&gt; <span class="p h4 green">turtle.pencolor(colorstring)或turtle.pencolor((r，g，b))</span><br>    <span class="p h4">作用：设置画笔颜色，当无参数输入时返回当前画笔颜色。</span><br>    <span class="p h4">参数：colorstring:表示颜色的字符串，如</span><br>    <span class="p h4">(r，g，b):颜色对应的RGB数值，例如，（160，32，240）</span><br>    <span class="p h4">很多RGB颜色都有固定的英文名字，这些英文名字可以作为colorstring输入到turtle.pencolor()函数中，也可以采用（r，g，b）形式直接输入颜色值。</span></strong><br>    <span class="p h4">代码（将画笔的颜色调为红色）：</span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line">turtle.screensize(bg=<span class="string">&quot;green&quot;</span>)<span class="comment">#设置背景颜色</span></span><br><span class="line">turtle.setup(<span class="number">600</span>,<span class="number">600</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.pencolor(<span class="string">&quot;red&quot;</span>)</span><br><span class="line">turtle.pensize(<span class="number">50</span>)</span><br><span class="line">turtle.goto(<span class="number">200</span>,<span class="number">200</span>)</span><br><span class="line">turtle.done()</span><br></pre></td></tr></table></figure><span class="p h4">运行：</span><p><img src="/2022/08/27/python%E7%BB%98%E5%9B%BE%E4%B9%8Bturtle%E7%9A%84%E4%BD%BF%E7%94%A8/9aec2f6ba8e8435992d60f2197c773a7.png" alt="在这里插入图片描述"></p><h3 id="-17"><a href="#-17" class="headerlink" title></a><span class="p h4 cyan">colormode()函数</span></h3><p><strong>—&gt;<span class="p h4 green">turtle.colormode(mode)改变turtle色彩的模式，默认为小数值，可以切换为整数值</span><br>    <span class="p h4">turtle.colormode(1.0)：RGB小数值模式</span><br>    <span class="p h4">turtle.colormode(255)：RGB整数值模式</span></strong></p><div class="img-wrap"><div class="img-bg" style="background:#ffffff"><img class="img" src="https://tse1-mm.cn.bing.net/th/id/OIP-C.hPrsQ3Kc5UL0ReDgh0B6qwE8DF?w=275&h=180&c=7&r=0&o=5&dpr=1.35&pid=1.7"></div></div>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于51单片机的智能循迹小车</title>
      <link href="/2022/08/25/%E5%9F%BA%E4%BA%8E51%E5%8D%95%E7%89%87%E6%9C%BA%E7%9A%84%E6%99%BA%E8%83%BD%E5%BE%AA%E8%BF%B9%E5%B0%8F%E8%BD%A6/"/>
      <url>/2022/08/25/%E5%9F%BA%E4%BA%8E51%E5%8D%95%E7%89%87%E6%9C%BA%E7%9A%84%E6%99%BA%E8%83%BD%E5%BE%AA%E8%BF%B9%E5%B0%8F%E8%BD%A6/</url>
      
        <content type="html"><![CDATA[<h1 id><a href="#" class="headerlink" title="  "></a><img no-lazy class="inline" src="https://img0.baidu.com/it/u=58211012,1266969422&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500" style="height:70px;"><span class="p yellow">基于</span> <span class="p green">51单片机</span><span class="p blue">智能小车</span><span class="p red">循迹功能</span> <span class="p cyan">的实现</span><img no-lazy class="inline" src="https://img1.baidu.com/it/u=662098660,3498458039&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500" style="height:1.5em"></h1><h2 id="-1"><a href="#-1" class="headerlink" title></a><span class="p blue">一、思路（仅供参考）</span></h2><p>   <strong><span class="p h4">本实验采用两路</span><span class="p red h4">红外循迹模块</span><span class="p h4">单黑线</span><span class="p h4">循迹的方法。当</span><span class="p h4">红外循迹模块</span><span class="p red h4">未检测到</span><span class="p h4">黑线</span>，<span class="p h4">则前进 ；</span> <span class="p red h4">若一边检测到</span><span class="p h4">黑线</span>，<span class="p h4">则实现转弯；</span><span class="p red h4">若两边均检测到</span> <span class="p h4">黑线</span>，<span class="p h4">则停止。利用两路红外循迹模块接收到的信号控制电机的运动，实现小车的前进，转弯等运动。</span></strong></p><h2 id="-2"><a href="#-2" class="headerlink" title></a><span class="p blue">二、部分硬件模块介绍</span></h2><h3 id="-3"><a href="#-3" class="headerlink" title></a><span class="p cyan">1、L298n电机驱动模块</span></h3><p><img src="https://img-blog.csdnimg.cn/f83272bea0f64502a6614c2331c66a7e.png#pic_center" style="zoom:40%;"></p><h3 id="-4"><a href="#-4" class="headerlink" title></a><span class="p cyan">2、两路红外循迹模块</span></h3><p><strong><span class="p gray h4">背面</span></strong><br><img src="https://img-blog.csdnimg.cn/a126c6d648d24a69a4327c8e06cb0ec4.png#pic_center" alt="在这里插入图片描述" style="zoom: 15%;"><br><strong><span class="p gray h4">正面</span></strong><br> <span class="p gray h4">--------------------（==</span><span class="p yellow h4">黄色的旋钮是用来调节灵敏度的==）-----------------------------</span><br><img src="https://img-blog.csdnimg.cn/99ffdc71d2b545479bc9bbc6c8a4ac73.png#pic_center" style="zoom: 10%;"></p><h2 id="-5"><a href="#-5" class="headerlink" title></a><span class="p blue">三、实现</span></h2><h3 id="-6"><a href="#-6" class="headerlink" title></a><span class="p cyan">1、代码</span></h3><p><strong><span class="p red h4">(1)、函数部分</span></strong></p><details class="folding-tag" blue><summary> 函数代码 </summary>              <div class="content">              <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;reg52.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;header.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Left_forward</span><span class="params">()</span><span class="comment">//左轮前转</span></span><br><span class="line">&#123;</span><br><span class="line">Left_1=<span class="number">0</span>;</span><br><span class="line"> Left_2=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Left_back</span><span class="params">()</span><span class="comment">//左轮后转</span></span><br><span class="line">&#123;</span><br><span class="line">Left_1=<span class="number">1</span>;</span><br><span class="line"> Left_2=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Left_stop</span><span class="params">()</span>左轮停止（刹车）</span><br><span class="line">&#123;</span><br><span class="line">Left_1=<span class="number">1</span>;</span><br><span class="line">Left_2=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Right_forward</span><span class="params">()</span><span class="comment">//右轮前转</span></span><br><span class="line">&#123;</span><br><span class="line">Right_1=<span class="number">1</span>;</span><br><span class="line">Right_2=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Right_back</span><span class="params">()</span><span class="comment">//右轮后转</span></span><br><span class="line">&#123;</span><br><span class="line">Right_1=<span class="number">0</span>;</span><br><span class="line">Right_2=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Right_stop</span><span class="params">()</span><span class="comment">//右轮停止</span></span><br><span class="line">&#123;</span><br><span class="line">Right_1=<span class="number">1</span>;</span><br><span class="line">Right_2=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Forward_run</span><span class="params">()</span><span class="comment">//前进</span></span><br><span class="line">&#123;</span><br><span class="line">Left_forward();</span><br><span class="line">Right_forward();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Back_run</span><span class="params">()</span><span class="comment">//后退</span></span><br><span class="line">&#123;</span><br><span class="line">Left_back();</span><br><span class="line">Right_back();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Left_run</span><span class="params">()</span><span class="comment">//边前进边左转</span></span><br><span class="line">&#123;</span><br><span class="line"> </span><br><span class="line">Left_stop();</span><br><span class="line">    Right_forward();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Right_run</span><span class="params">()</span><span class="comment">//边前进边右转</span></span><br><span class="line">&#123;</span><br><span class="line">Left_forward();</span><br><span class="line">Right_stop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Stop_run</span><span class="params">()</span>停止（刹车）</span><br><span class="line">&#123;</span><br><span class="line">Left_stop();</span><br><span class="line">Right_stop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Stop_Left_run</span><span class="params">()</span><span class="comment">//原地左转</span></span><br><span class="line">&#123;</span><br><span class="line">Left_back();</span><br><span class="line">Right_forward();</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Stop_Right_run</span><span class="params">()</span><span class="comment">//原地右转</span></span><br><span class="line">&#123;</span><br><span class="line">Left_forward();</span><br><span class="line">Right_back();</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_left_motor</span><span class="params">()</span><span class="comment">//左轮pwm调速</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(Left_motor_var&lt;Left_cycle)</span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">if</span>(Left_motor_var&lt;=Left_H)</span><br><span class="line">ENA=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">ENA=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">Left_motor_var=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_right_motor</span><span class="params">()</span><span class="comment">//右轮pwm调速</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(Right_motor_var&lt;Right_cycle)</span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">if</span>(Right_motor_var&lt;=Right_H)</span><br><span class="line">ENB=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">ENB=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span><span class="comment">//(Right_moto_var&gt;=Right_cycle)</span></span><br><span class="line">&#123;</span><br><span class="line">Right_motor_var=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Init_timer0</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">TMOD=<span class="number">0x01</span>;<span class="comment">//定时器0方式1</span></span><br><span class="line">TH0=(<span class="number">65536</span><span class="number">-100</span>)/<span class="number">256</span>; <span class="comment">//100微秒</span></span><br><span class="line">TL0=(<span class="number">65536</span><span class="number">-100</span>)%<span class="number">256</span>;</span><br><span class="line">EA=<span class="number">1</span>;</span><br><span class="line">ET0=<span class="number">1</span>;</span><br><span class="line">TR0=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Follow_Function</span><span class="params">()</span><span class="comment">//循迹函数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(Left_reaction==<span class="number">0</span>&amp;&amp;Right_reaction==<span class="number">0</span>)<span class="comment">//左右均为检测到黑线（有信号返回）</span></span><br><span class="line">Forward_run();</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(Left_reaction==<span class="number">1</span>&amp;&amp;Right_reaction==<span class="number">1</span>)<span class="comment">//左右无信号返回，均检测到黑线</span></span><br><span class="line">Stop_run();</span><br><span class="line"><span class="keyword">if</span>(Left_reaction==<span class="number">0</span>&amp;&amp;Right_reaction==<span class="number">1</span>)<span class="comment">//右边检测到黑线，右转</span></span><br><span class="line">Stop_Right_run();</span><br><span class="line"><span class="keyword">if</span>(Left_reaction==<span class="number">1</span>&amp;&amp;Right_reaction==<span class="number">0</span>)<span class="comment">//左转</span></span><br><span class="line"> Stop_Left_run();</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_1ms</span><span class="params">(uint k)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line"><span class="keyword">while</span>(k--)</span><br><span class="line">&#123;</span><br><span class="line">_nop_();</span><br><span class="line">i = <span class="number">2</span>;</span><br><span class="line">j = <span class="number">199</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--j);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><p><strong><span class="p red h4">(2)、头文件</span></strong></p><details class="folding-tag" blue><summary> 头文件 </summary>              <div class="content">              <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __header_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __header_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;intrins.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">int</span> uint;</span><br><span class="line"><span class="comment">/*L298n电机驱动模块*/</span></span><br><span class="line">sbit Left_1=P1^<span class="number">2</span>;</span><br><span class="line">sbit Left_2=P1^<span class="number">3</span>;</span><br><span class="line">sbit Right_1=P1^<span class="number">4</span>;</span><br><span class="line">sbit Right_2=P1^<span class="number">5</span>;</span><br><span class="line">sbit ENA=P1^<span class="number">0</span>;</span><br><span class="line">sbit ENB=P1^<span class="number">1</span>;</span><br><span class="line"><span class="comment">/*红外循迹模块R0、L0*/</span></span><br><span class="line">sbit Left_reaction=P3^<span class="number">6</span>;</span><br><span class="line">sbit Right_reaction=P3^<span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> uint Left_motor_var;<span class="comment">//用于左电机周期计数</span></span><br><span class="line"><span class="keyword">extern</span> uint Left_H;<span class="comment">//左电机高电平，用于计算占空比</span></span><br><span class="line"><span class="keyword">extern</span> uint Right_motor_var;</span><br><span class="line"><span class="keyword">extern</span> uint Right_H;</span><br><span class="line"><span class="keyword">extern</span> uint Left_cycle;<span class="comment">//左电机周期</span></span><br><span class="line"><span class="keyword">extern</span> uint Right_cycle;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Left_forward</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Left_back</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Left_stop</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Right_forward</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Right_back</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Right_stop</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Forward_run</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Back_run</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Left_run</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Right_run</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Stop_run</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Stop_Left_run</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Stop_Right_run</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_left_motor</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_right_motor</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Init_timer0</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Follow_Function</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_1ms</span><span class="params">(uint k)</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>              </div>            </details><p><strong><span class="p red h4">(3)、主函数</span></strong></p><details class="folding-tag" blue><summary> main函数 </summary>              <div class="content">              <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;reg52.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;header.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">uint Left_motor_var=<span class="number">0</span>;</span><br><span class="line">uint Left_H=<span class="number">100</span>;</span><br><span class="line">uint Right_motor_var=<span class="number">0</span>;</span><br><span class="line">uint Right_H=<span class="number">100</span>;</span><br><span class="line">uint Left_cycle=<span class="number">100</span>;</span><br><span class="line">uint Right_cycle=<span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">Init_timer0();</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">Follow_Function();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">timer_t0</span><span class="params">()</span>interrupt 1</span><br><span class="line">&#123;</span><br><span class="line">TH0=(<span class="number">65536</span><span class="number">-100</span>)/<span class="number">256</span>;</span><br><span class="line">TL0=(<span class="number">65536</span><span class="number">-100</span>)%<span class="number">256</span>;</span><br><span class="line">Left_motor_var++;</span><br><span class="line">Right_motor_var++;</span><br><span class="line">PWM_left_motor();</span><br><span class="line">PWM_right_motor();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><h2 id="-7"><a href="#-7" class="headerlink" title></a><span class="p blue">四、总结</span></h2><p>   <strong><span class="p gray h4">第一次做小车，感觉只要搞懂各个模块的实现的原理，做起来就轻松了很多。 文章比较简洁，不足之处，还望指出。</span></strong></p><p><a href="https://live.csdn.net/v/208919">点击查看小车运行</a>  </p><p class="p red h4">注意！视频有声音，建议先将音量调小</p><p class="p red h4">注意！视频有声音，建议先将音量调小</p><p class="p red h4">注意！视频有声音，建议先将音量调小</p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows平台下利用hexo-github搭建个人博客网</title>
      <link href="/2022/08/24/Windows%E5%B9%B3%E5%8F%B0%E4%B8%8B%E5%88%A9%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91/"/>
      <url>/2022/08/24/Windows%E5%B9%B3%E5%8F%B0%E4%B8%8B%E5%88%A9%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91/</url>
      
        <content type="html"><![CDATA[<h1 id="Windows平台下利用hexo-github搭建个人博客网"><a href="#Windows平台下利用hexo-github搭建个人博客网" class="headerlink" title="Windows平台下利用hexo+github搭建个人博客网 "></a>Windows<img no-lazy class="inline" src="https://img0.baidu.com/it/u=2926484186,1793459906&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500" style="height:1.5em">平台下利用hexo+github搭建个人博客网 <img no-lazy class="inline" src="https://tse4-mm.cn.bing.net/th/id/OIP-C.Q8fesauwGpQDaJuAQgDovAHaKR?w=142&h=197&c=7&r=0&o=5&dpr=1.35&pid=1.7" style="height:1.5em"></h1><h2 id><a href="#" class="headerlink" title></a><span class="p blue">一、Hexo简介</span></h2><p><strong><span class="p h4">Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。有高扩展性、静态的特性。</span></strong><img no-lazy class="inline" src="https://img1.baidu.com/it/u=81625935,2068970761&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500" style="height:50px;"></p><h2 id="-1"><a href="#-1" class="headerlink" title=" "></a><span class="p blue">二、Hexo的搭建</span> <img no-lazy class="inline" src="https://tse1-mm.cn.bing.net/th/id/OIP-C.pDwjhBIj4q4XJuDNwWmnVQHaF7?w=273&h=218&c=7&r=0&o=5&dpr=1.35&pid=1.7" style="height:50px;"></h2><h3 id="-2"><a href="#-2" class="headerlink" title></a><span class="p green">1、下载并安装git</span></h3><p><strong><span class="p h4">下载git</span> <a href="https://git-scm.com/download">(下载地址)</a> <span class="p h4">安装过程略。</span></strong> </p><h3 id="-3"><a href="#-3" class="headerlink" title></a><span class="p green">2、安装Node.js及npm包管理工具</span></h3><p>​    <strong><span class="p logo h4">HexoHexo是基于node.js编写的，需要安装node.js以及npm（NPM是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题，允许用户从NPM服务器下载别人编写的第三方包到本地使用，允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用，允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。）</span></strong></p><p><strong><a href="http://nodejs.cn/download/">Node.js下载地址</a>，<span class="p h4">安装好之后可在命令行中输入:</span></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure><p><strong><span class="p yellow h4">查看是否出现版本号，出现则安装成功。</span></strong></p><h3 id="-4"><a href="#-4" class="headerlink" title></a><span class="p green">3、安装Hexo</span></h3><p><strong><span class="p cyan h4">先在任意一个位置创建一个文件夹，用来存放博客文件，名字自取，例如：Blog。进入到该文件夹，右键鼠标选择Git bash here</span></strong></p><details class="folding-tag" open green><summary> 详情： </summary>              <div class="content">              <p><img src="/2022/08/24/Windows%E5%B9%B3%E5%8F%B0%E4%B8%8B%E5%88%A9%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91/git_bash_here-1661331103884.png" alt></p>              </div>            </details><p><strong><span class="p cyan h4">输入命令：</span></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p><strong><span class="p cyan h4">安装Hexo。其中</span> <span class="p red h4">-g</span> <span class="p cyan h4">表示全局安装</span>  </strong></p><p><strong><span class="p h4">安装完成后输入命令：</span></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p><strong><span class="p gray h4">检查是否安装成功</span></strong></p><details class="folding-tag" open green><summary> 检查： </summary>              <div class="content">              <p><img src="/2022/08/24/Windows%E5%B9%B3%E5%8F%B0%E4%B8%8B%E5%88%A9%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91/hexo-v-1661331103885.png" alt></p>              </div>            </details><h3 id="-5"><a href="#-5" class="headerlink" title></a><span class="p green">4、创建一个hexo项目：</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化网站</span></span><br><span class="line"><span class="comment"># Blog是文件夹名，可自行取，如果已在Blog目录，直接使用 hexo init</span></span><br><span class="line">hexo init Blog </span><br><span class="line"><span class="built_in">cd</span> Blog <span class="comment"># 进入Blog目录，</span></span><br><span class="line"><span class="comment">#安装软件包及其依赖的任何软件包</span></span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p><strong><span class="p cyan h4">初始化：</span></strong></p><details class="folding-tag" open green><summary> 初始化： </summary>              <div class="content">              <p><img src="/2022/08/24/Windows%E5%B9%B3%E5%8F%B0%E4%B8%8B%E5%88%A9%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91/hexo_init_Blog-1661331103885.png" alt></p>              </div>            </details><details class="folding-tag" open green><summary> 完成后目录： </summary>              <div class="content">              <p><img src="/2022/08/24/Windows%E5%B9%B3%E5%8F%B0%E4%B8%8B%E5%88%A9%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91/init后Blog下的文件-1661331103885.png" alt></p>              </div>            </details><p><strong><span class="p gray h4">node_modules: 依赖包 scaffolds：生成文章的一些模板</span></strong></p><p><strong><span class="p gray h4">source：文章存放目录themes：网页主题</span></strong></p><p><strong><span class="p gray h4">_config.yml: 博客配置文件</span></strong></p><p><strong><span class="p cyan h4">完成Hexo的初始化后，输入命令：</span></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate <span class="comment">#生成静态网页，简写：hexo g</span></span><br></pre></td></tr></table></figure><details class="folding-tag" open green><summary> 选项参数： </summary>              <div class="content">              <p><img src="/2022/08/24/Windows%E5%B9%B3%E5%8F%B0%E4%B8%8B%E5%88%A9%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91/hexo-g相关-1661331103885.png" alt></p>              </div>            </details><p><strong><span class="p cyan h4">hexo g：</span></strong></p><details class="folding-tag" open green><summary> 生成静态网页： </summary>              <div class="content">              <p><img src="/2022/08/24/Windows%E5%B9%B3%E5%8F%B0%E4%B8%8B%E5%88%A9%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91/hexo-g-bash-1661331103885.png" alt></p>              </div>            </details><p><strong><span class="p cyan h4">再输入命令：</span></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server <span class="comment">#打开本地服务器,简写：hexo s，默认情况下，访问网址为：http://localhost:4000/</span></span><br></pre></td></tr></table></figure><details class="folding-tag" open green><summary> 选项参数： </summary>              <div class="content">              <p><img src="/2022/08/24/Windows%E5%B9%B3%E5%8F%B0%E4%B8%8B%E5%88%A9%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91/hexo-s-1661331103885.png" alt></p>              </div>            </details><p><strong><span class="p gray h4">hexo s成功样式：</span></strong></p><details class="folding-tag" open green><summary> 成功样式： </summary>              <div class="content">              <p><img src="/2022/08/24/Windows%E5%B9%B3%E5%8F%B0%E4%B8%8B%E5%88%A9%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91/hexo-s--1661331103885.png" alt></p>              </div>            </details><p><strong><span class="p gray h4">在浏览器中打开网页：</span><code>http://localhost:4000/</code>  <span class="p gray h4">即可看见博客了(Hello World是在初始化博客文件夹时/source/_post目录下自动创建的)。</span></strong></p><details class="folding-tag" open green><summary> 博客页面： </summary>              <div class="content">              <p><img src="/2022/08/24/Windows%E5%B9%B3%E5%8F%B0%E4%B8%8B%E5%88%A9%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91/hexo-s后网址-1661331103885.png" alt></p>              </div>            </details><p><strong><span class="p h4">返回Git bash here的终端，按ctrl+c终止本地服务</span></strong></p><h2 id="-6"><a href="#-6" class="headerlink" title></a><span class="p blue">三、部署到github</span></h2><p><strong><span class="p yellow h4">假设已有github账户。</span></strong></p><p><strong><span class="p red h4">创建一个和你github账户相同的repository（仓库），Repository name 中，在用户名后面加</span><code>.github.io</code> <span class="p red h4">后缀</span></strong></p><details class="folding-tag" open green><summary> 仓库名设置： </summary>              <div class="content">              <p><img src="/2022/08/24/Windows%E5%B9%B3%E5%8F%B0%E4%B8%8B%E5%88%A9%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91/github.io.2-1661331103885.png" alt></p>              </div>            </details><p><strong><em><span class="p h4">（遮住部分相同）</span></em></strong></p><p><strong><span class="p h4">创建成功后，在刚刚创建的文件夹下（我这文件夹名是Blog）右键，选择</span> <code>git bash here</code> </strong></p><p><strong><span class="p cyan h4">然后输入下面命令：</span></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;yourname&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;youremail&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong><span class="p gray h4">配置好用户名及邮箱</span></strong></p><p><strong><span class="p gray h4">生成SSH并添加到github</span></strong></p><p><strong><span class="p cyan h4">完成上面内容后，打开之前创建好的文件夹（我这是Blog）下面的配置文件</span> <span class="p gray h4">“_config.yml”</span></strong></p><p><strong><span class="p h4">修改最后面</span><span class="p red h4">deploy:</span></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: https://github.com/****/****.github.io</span><br><span class="line">  branch: master</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​    <strong><code>repository</code><span class="p gray h4">修改为你自己的github项目地址即可</span></strong></p><p><strong><span class="p gray h4">此外还需要安装</span><code>deploy-git</code> <span class="p gray h4">安装之后可通过命令部署到github中</span></strong></p><p><strong><span class="p cyan h4">git bash中输入：</span></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p><strong><span class="p cyan h4">之后</span></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d  <span class="comment">#hexo deploy缩写</span></span><br></pre></td></tr></table></figure><h2 id="-7"><a href="#-7" class="headerlink" title></a><span class="p blue">四、如何写文章</span></h2><p>​    <strong><span class="p cyan h4">安装扩展：</span></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-deployer-git</span><br></pre></td></tr></table></figure><p>​    <strong><span class="p cyan h4">在之前创建好的写博客文件目录（我这是Blog）下打开git bash</span></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>​    <strong><span class="p cyan h4">新建一篇文章，如果没有设置</span> <code>layout</code> <span class="p cyan h4">的话，默认会使用</span><code>_config.yml</code> <span class="p cyan h4">中的</span> <code>default_layout</code> <span class="p cyan h4">参数代替。</span><span class="p red">title</span><span class="p cyan h4">为文章标题，如果标题包含空格的话，需要使用引号括起来。</span></strong></p><p><strong><span class="p gray h4">例如：</span></strong></p><details class="folding-tag" open green><summary> 创建文章示例： </summary>              <div class="content">              <p><img src="/2022/08/24/Windows%E5%B9%B3%E5%8F%B0%E4%B8%8B%E5%88%A9%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91/hexo-new-FirstBlog-1661331103885.png" alt></p>              </div>            </details><p><strong><em><span class="p yellow h4">（如果</span><span class="p red h4">hexo new < title ></span><span class="p yellow h4">出错，可使用</span><code>hexo new &#39;[post]&#39; &lt;title&gt;</code><span class="p yellow h4">试试）</span></em></strong></p><p><strong><span class="p gray h4">完成后在</span><code>\Blog\source\_posts</code><span class="p gray h4">目录下会多出一个</span><code>.md</code><span class="p gray h4">文件，用于写文章，还有一个同名文件夹，用于存放图片等其他在博客中使用的数据。</span></strong></p><details class="folding-tag" open green><summary> 执行创建命令后_posts文件夹下文件： </summary>              <div class="content">              <p><img src="/2022/08/24/Windows%E5%B9%B3%E5%8F%B0%E4%B8%8B%E5%88%A9%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91/md文件-1661331103885.png" alt></p>              </div>            </details><p><strong><span class="p gray h4">在.md文件中利用markdown语法书写博客，并保存。</span></strong></p><h2 id="-8"><a href="#-8" class="headerlink" title></a><span class="p blue">五、发表文章</span></h2><p><strong><span class="p gray h4">.md文件书写完后保存，在之前已创建好的写博客目录（我之前创建的是Blog）下打开git bash</span> 。<span class="p cyan h4">依次输入：</span></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s </span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p><strong><span class="p cyan h4">之后，打开https://用户名.github.io (用户名：即你的github的用户名)即可看见你的博客</span></strong></p><h2 id="）"><a href="#）" class="headerlink" title=" ）"></a><span class="p blue">六、绑定域名（可选，需花</span> <img no-lazy class="inline" src="https://img1.baidu.com/it/u=1737330605,3231525217&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500 height=10" style="height:1.5em">）</h2><p><strong><span class="p gray h4">如果想使用自己喜欢的域名，可自行去购买注册并添加解析记录，</span><span class="p red h4">此处只介绍添加解析记录，其他有关域名注册不做详细介绍。</span><span class="p gray h4">(以腾讯云为例)</span></strong></p><details class="folding-tag" open green><summary> 添加解析界面： </summary>              <div class="content">              <p><img src="/2022/08/24/Windows%E5%B9%B3%E5%8F%B0%E4%B8%8B%E5%88%A9%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91/解析1-1661331103885.png" alt></p>              </div>            </details><p><strong><span class="p cyan h4">需要进行两次添加解析记录，记录类型均选择CNAME</span><span class="p red h4">username.github.io</span></strong></p><p><strong><span class="p red h4">步骤：打开github--->进入自己为博客创建的仓库（用户名.github.io这个仓库）--->setting--->找到github pages--->Custom domain--->将自己购买的域名填入--->save</span></strong></p><details class="folding-tag" open green><summary> pages页面： </summary>              <div class="content">              <p><img src="/2022/08/24/Windows%E5%B9%B3%E5%8F%B0%E4%B8%8B%E5%88%A9%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91/github_page.png" style="zoom: 33%;"></p>              </div>            </details><details class="folding-tag" open green><summary> Custom_domain： </summary>              <div class="content">              <p><img src="/2022/08/24/Windows%E5%B9%B3%E5%8F%B0%E4%B8%8B%E5%88%A9%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91/custom-domain-1661331103885.png" alt></p>              </div>            </details><p><strong><span class="p green h4">当用户访问你购买的域名时，会自动跳转 username.github.io</span></strong></p><p><strong><span class="p green h4">实际上，当你通上面 “步骤” save后，github会自动创建一个CNAME文件。</span></strong></p><p><strong><span class="p yellow h4">建议：在博客文件根目录的 source文件夹中创建CNAME文件（名称就是CNAME无后缀），因为在部署到github的时候github中的CNAME文件可能被删除，造成域名无法访问。</span> </strong></p><p><strong><span class="p gray h4">浏览器中使用购买注册的域名，即可访问你写的博客。</span></strong></p><div class="img-wrap"><div class="img-bg" style="background:#ffffff"><img class="img" src="https://tse3-mm.cn.bing.net/th/id/OIP-C.yR8XrUgG9MNlH80Wk2FjjQHaEK?w=333&h=187&c=7&r=0&o=5&dpr=1.35&pid=1.7" style="width:400px;"></div></div>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>猜数字小游戏</title>
      <link href="/2022/08/24/%E7%8C%9C%E6%95%B0%E5%AD%97%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
      <url>/2022/08/24/%E7%8C%9C%E6%95%B0%E5%AD%97%E5%B0%8F%E6%B8%B8%E6%88%8F/</url>
      
        <content type="html"><![CDATA[<h1 id><a href="#" class="headerlink" title="  "></a><img no-lazy class="inline" src="https://tse1-mm.cn.bing.net/th/id/OIP-C.VzbD7Tkv253JYxnQh0FMMAHaEo?w=262&h=180&c=7&r=0&o=5&dpr=1.35&pid=1.7" style="height: 60px;"> <span class="p cyan">python猜数字游戏</span> <img no-lazy class="inline" src="https://tse3-mm.cn.bing.net/th/id/OIP-C.w8WH19cgyH6O_pFU0YVJkgHaHH?w=179&h=180&c=7&r=0&o=5&dpr=1.35&pid=1.7" style="height: 60px;"></h1><h2 id="-1"><a href="#-1" class="headerlink" title></a><span class="p green">一、要求：</span></h2><span class="p green h4">输入指定范围，在该范围内进行猜数，可多次猜数，直到猜中 如果猜错，给出下次猜数的范围继续猜</span><h2 id="-2"><a href="#-2" class="headerlink" title=" "></a><span class="p blue">二、思路：</span> <img no-lazy class="inline" src="https://tse4-mm.cn.bing.net/th/id/OIP-C.GsgoO5Ib3l5hS_ZxbcZKaQAAAA?w=172&h=180&c=7&r=0&o=5&dpr=1.35&pid=1.7" style="height:80px;"></h2><p class="p blue small">导入random包，生成随机数</p> <p class="p blue small">利用while循环进行多次猜数</p><p class="p blue small">利用条件语句if ... elif ... else 语句对所猜测的数进行判断</p><h2 id="-3"><a href="#-3" class="headerlink" title></a><span class="p yellow">三、代码部分</span></h2><details class="folding-tag" green><summary> 代码： </summary>              <div class="content">              <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random<span class="comment">#导入random包</span></span><br><span class="line">Min = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入所猜范围的最小边界:&#x27;</span>))</span><br><span class="line">Max = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入所猜范围的最大边界:&#x27;</span>))</span><br><span class="line">ran = random.randint(Min,Max)     <span class="comment">#生成随机数</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    guess = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入一个数:&#x27;</span>)) <span class="comment">#输入猜测的数</span></span><br><span class="line">    <span class="keyword">if</span> guess == ran :                  <span class="comment">#猜测的数与生成的随机数进行比较判断</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;恭喜你猜中了！&#x27;</span>)</span><br><span class="line">        <span class="keyword">break</span>;                   <span class="comment">#猜中则退出循环</span></span><br><span class="line">    <span class="keyword">elif</span> guess &lt; Min <span class="keyword">or</span> guess &gt; Max:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;超出范围了哦！&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;该数在%d~%d之间&#x27;</span> % (Min, Max))<span class="comment">#如果超出所给范围，进行提示</span></span><br><span class="line">    <span class="keyword">elif</span> guess &lt; ran:</span><br><span class="line">        Min = guess</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;该数在%d~%d之间&#x27;</span> % (Min, Max))<span class="comment">#未猜中，给出下次猜测的范围</span></span><br><span class="line">    <span class="keyword">elif</span> guess &gt; ran:</span><br><span class="line">        Max = guess</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;该数在%d~%d之间&#x27;</span> % (Min, Max))<span class="comment">#未猜中，给出下次猜测的范围</span></span><br></pre></td></tr></table></figure>              </div>            </details><h2 id="-4"><a href="#-4" class="headerlink" title=" "></a><span class="p gray">四、运行演示：</span> <img no-lazy class="inline" src="https://tse3-mm.cn.bing.net/th/id/OIP-C.BJFxbXLgQC-Xtn68l6mfogHaFt?w=262&h=202&c=7&r=0&o=5&dpr=1.35&pid=1.7" style="height:50px;"></h2><details class="folding-tag" blue><summary> 演示 </summary>              <div class="content">              <p><img src="/2022/08/24/%E7%8C%9C%E6%95%B0%E5%AD%97%E5%B0%8F%E6%B8%B8%E6%88%8F/0-1661323242996.png" alt></p>              </div>            </details><h2 id="-5"><a href="#-5" class="headerlink" title></a><span class="p red">五、总结</span></h2><span class="p green h4">这种类型和要求的猜数字小游戏主要考查对条件语句和循环语句的运用，可以加强对相关语句的了解及运用。</span>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python print()</title>
      <link href="/2022/08/23/Python-print/"/>
      <url>/2022/08/23/Python-print/</url>
      
        <content type="html"><![CDATA[<h1 id="Python中print-语句的相关使用"><a href="#Python中print-语句的相关使用" class="headerlink" title="Python中print()语句的相关使用"></a>Python中print()语句的相关使用</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><strong>print()函数可以将输出的信息打印出来，即发送给标准输出流。Python中可以直接使用print()函数，将信息展示在控制台</strong></p><h2 id="基本使用方法"><a href="#基本使用方法" class="headerlink" title="基本使用方法"></a>基本使用方法</h2><h3 id="输出数字"><a href="#输出数字" class="headerlink" title="输出数字"></a>输出数字</h3><p>可直接在括号内输入想要打印的数字</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#输出数字</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">520</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="number">98.5</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="/2022/08/23/Python-print/python_print.png" alt></p><h3 id="输出字符串"><a href="#输出字符串" class="headerlink" title="输出字符串"></a>输出字符串</h3><p>可利用英文输入法下的单引号或双引号，输出字符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#输出字符串</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Helloworld&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Helloworld&quot;</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="/2022/08/23/Python-print/python_print字符串的输出.png" alt></p><h3 id="输出含运算符的表达式"><a href="#输出含运算符的表达式" class="headerlink" title="输出含运算符的表达式"></a>输出含运算符的表达式</h3><p>直接将含运算符的表达式放置于括号内，可打印运算结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#输出含有运算符的表达式</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">3</span>+<span class="number">1</span>) <span class="comment">#输出表达式的结果</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="/2022/08/23/Python-print/print表达式.png" alt></p><h3 id="不换行输出"><a href="#不换行输出" class="headerlink" title="不换行输出"></a>不换行输出</h3><p>利用逗号隔开，同时输出多组内容，使其不换行输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#不进行换行输出（输出内容在一行）</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello&#x27;</span>,<span class="string">&#x27;world&#x27;</span>,<span class="string">&#x27;Python&#x27;</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="/2022/08/23/Python-print/print不换行输出.png" alt></p><h3 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h3><p>python相关转义字符表:</p><p><img src="/2022/08/23/Python-print/转义字符表.png" alt></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">![<span class="built_in">print</span>转义符](Python-<span class="built_in">print</span>/<span class="built_in">print</span>转义符.png)![<span class="built_in">print</span>转义符](Python-<span class="built_in">print</span>/<span class="built_in">print</span>转义符.png)![<span class="built_in">print</span>转义符](C:\Users\ZengChao\Desktop\MyBlog\MyBlog\source\_posts\Python-<span class="built_in">print</span>\<span class="built_in">print</span>转义符.png)<span class="comment"># 转义字符</span></span><br><span class="line"><span class="comment"># \n 换行符：换行</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello\nworld&#x27;</span>)</span><br><span class="line"><span class="comment"># \t 制表符：每四个为一组，光标移动到下组四个字符前</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello\tworld&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;helloooo\tworld&#x27;</span>)</span><br><span class="line"><span class="comment"># \r 回车符：光标移动到本行的开头（删掉本行之前的）</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello\rworld&#x27;</span>)</span><br><span class="line"><span class="comment"># \b 退格符：退格（Backspace），将光标位置移到前一位。</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello\bworld&#x27;</span>)</span><br><span class="line"><span class="comment">#需使用&#x27;\&#x27;符号时，要另外用一个&#x27;\&#x27;进行转义</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;http:\\www.xxx.com&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;http:\\\\www.xxx.com&#x27;</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="/2022/08/23/Python-print/print转义符.png" alt></p><h3 id="原字符"><a href="#原字符" class="headerlink" title="原字符"></a>原字符</h3><p>不希望字符串中的转义字符起作用，就用原字符，就是在字符串之前加上r或R</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#原字符：</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">r&#x27;hello\nworld&#x27;</span>) </span><br><span class="line"><span class="comment">#当 r 或者 R 前缀存在的时候，在反斜杠后面的字符保持不变，并且反斜杠本身会保留在字符串中。</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">r&#x27;hello\nworld\\&#x27;</span>) <span class="comment">#原始字符串无法以单个的（奇数个的）反斜杠结尾。</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="/2022/08/23/Python-print/原字符.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
